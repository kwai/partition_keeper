// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        (unknown)
// source: teams/reco-arch/colossusdb/proto/statistics.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmbdServerStat int32

const (
	// statistics keys for partition db factory
	EmbdServerStat_instance_storage_limit_bytes EmbdServerStat = 0
)

// Enum value maps for EmbdServerStat.
var (
	EmbdServerStat_name = map[int32]string{
		0: "instance_storage_limit_bytes",
	}
	EmbdServerStat_value = map[string]int32{
		"instance_storage_limit_bytes": 0,
	}
)

func (x EmbdServerStat) Enum() *EmbdServerStat {
	p := new(EmbdServerStat)
	*p = x
	return p
}

func (x EmbdServerStat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmbdServerStat) Descriptor() protoreflect.EnumDescriptor {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[0].Descriptor()
}

func (EmbdServerStat) Type() protoreflect.EnumType {
	return &file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[0]
}

func (x EmbdServerStat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmbdServerStat.Descriptor instead.
func (EmbdServerStat) EnumDescriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescGZIP(), []int{0}
}

type EmbdReplicaStat int32

const (
	// statistics keys for partition db
	EmbdReplicaStat_db_storage_limit_bytes EmbdReplicaStat = 0
)

// Enum value maps for EmbdReplicaStat.
var (
	EmbdReplicaStat_name = map[int32]string{
		0: "db_storage_limit_bytes",
	}
	EmbdReplicaStat_value = map[string]int32{
		"db_storage_limit_bytes": 0,
	}
)

func (x EmbdReplicaStat) Enum() *EmbdReplicaStat {
	p := new(EmbdReplicaStat)
	*p = x
	return p
}

func (x EmbdReplicaStat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmbdReplicaStat) Descriptor() protoreflect.EnumDescriptor {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[1].Descriptor()
}

func (EmbdReplicaStat) Type() protoreflect.EnumType {
	return &file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[1]
}

func (x EmbdReplicaStat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmbdReplicaStat.Descriptor instead.
func (EmbdReplicaStat) EnumDescriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescGZIP(), []int{1}
}

type RodisServerStat int32

const (
	// size of a rodis db
	RodisServerStat_dbcap_bytes RodisServerStat = 0
	RodisServerStat_dbcpu_cores RodisServerStat = 1 // db cpu cores
)

// Enum value maps for RodisServerStat.
var (
	RodisServerStat_name = map[int32]string{
		0: "dbcap_bytes",
		1: "dbcpu_cores",
	}
	RodisServerStat_value = map[string]int32{
		"dbcap_bytes": 0,
		"dbcpu_cores": 1,
	}
)

func (x RodisServerStat) Enum() *RodisServerStat {
	p := new(RodisServerStat)
	*p = x
	return p
}

func (x RodisServerStat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RodisServerStat) Descriptor() protoreflect.EnumDescriptor {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[2].Descriptor()
}

func (RodisServerStat) Type() protoreflect.EnumType {
	return &file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[2]
}

func (x RodisServerStat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RodisServerStat.Descriptor instead.
func (RodisServerStat) EnumDescriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescGZIP(), []int{2}
}

type RodisReplicaStat int32

const (
	// sequence number of a partition replica, which is useful for WAL-based db
	// like rodis. the associated value should be a int64
	RodisReplicaStat_seq RodisReplicaStat = 0
)

// Enum value maps for RodisReplicaStat.
var (
	RodisReplicaStat_name = map[int32]string{
		0: "seq",
	}
	RodisReplicaStat_value = map[string]int32{
		"seq": 0,
	}
)

func (x RodisReplicaStat) Enum() *RodisReplicaStat {
	p := new(RodisReplicaStat)
	*p = x
	return p
}

func (x RodisReplicaStat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RodisReplicaStat) Descriptor() protoreflect.EnumDescriptor {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[3].Descriptor()
}

func (RodisReplicaStat) Type() protoreflect.EnumType {
	return &file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[3]
}

func (x RodisReplicaStat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RodisReplicaStat.Descriptor instead.
func (RodisReplicaStat) EnumDescriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescGZIP(), []int{3}
}

type StdStat int32

const (
	// float, 100 * cpu_cores
	StdStat_cpu_percent    StdStat = 0
	StdStat_memcap_bytes   StdStat = 1
	StdStat_diskcap_bytes  StdStat = 2
	StdStat_diskband_bytes StdStat = 3
	StdStat_netband_bytes  StdStat = 4
)

// Enum value maps for StdStat.
var (
	StdStat_name = map[int32]string{
		0: "cpu_percent",
		1: "memcap_bytes",
		2: "diskcap_bytes",
		3: "diskband_bytes",
		4: "netband_bytes",
	}
	StdStat_value = map[string]int32{
		"cpu_percent":    0,
		"memcap_bytes":   1,
		"diskcap_bytes":  2,
		"diskband_bytes": 3,
		"netband_bytes":  4,
	}
)

func (x StdStat) Enum() *StdStat {
	p := new(StdStat)
	*p = x
	return p
}

func (x StdStat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StdStat) Descriptor() protoreflect.EnumDescriptor {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[4].Descriptor()
}

func (StdStat) Type() protoreflect.EnumType {
	return &file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[4]
}

func (x StdStat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StdStat.Descriptor instead.
func (StdStat) EnumDescriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescGZIP(), []int{4}
}

type StdReplicaStat int32

const (
	StdReplicaStat_unavailable        StdReplicaStat = 0
	StdReplicaStat_stream_load_offset StdReplicaStat = 1
	StdReplicaStat_stream_load_paused StdReplicaStat = 2
)

// Enum value maps for StdReplicaStat.
var (
	StdReplicaStat_name = map[int32]string{
		0: "unavailable",
		1: "stream_load_offset",
		2: "stream_load_paused",
	}
	StdReplicaStat_value = map[string]int32{
		"unavailable":        0,
		"stream_load_offset": 1,
		"stream_load_paused": 2,
	}
)

func (x StdReplicaStat) Enum() *StdReplicaStat {
	p := new(StdReplicaStat)
	*p = x
	return p
}

func (x StdReplicaStat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StdReplicaStat) Descriptor() protoreflect.EnumDescriptor {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[5].Descriptor()
}

func (StdReplicaStat) Type() protoreflect.EnumType {
	return &file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes[5]
}

func (x StdReplicaStat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StdReplicaStat.Descriptor instead.
func (StdReplicaStat) EnumDescriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescGZIP(), []int{5}
}

var File_teams_reco_arch_colossusdb_proto_statistics_proto protoreflect.FileDescriptor

var file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDesc = []byte{
	0x0a, 0x31, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x2d, 0x61, 0x72, 0x63,
	0x68, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75, 0x73, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75, 0x73, 0x64, 0x62, 0x2a,
	0x32, 0x0a, 0x0e, 0x45, 0x6d, 0x62, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x12, 0x20, 0x0a, 0x1c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x10, 0x00, 0x2a, 0x2d, 0x0a, 0x0f, 0x45, 0x6d, 0x62, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x16, 0x64, 0x62, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x10, 0x00, 0x2a, 0x33, 0x0a, 0x0f, 0x52, 0x6f, 0x64, 0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x12, 0x0f, 0x0a, 0x0b, 0x64, 0x62, 0x63, 0x61, 0x70, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x64, 0x62, 0x63, 0x70, 0x75, 0x5f,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x10, 0x01, 0x2a, 0x1b, 0x0a, 0x10, 0x52, 0x6f, 0x64, 0x69, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x74, 0x61, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x73,
	0x65, 0x71, 0x10, 0x00, 0x2a, 0x66, 0x0a, 0x07, 0x53, 0x74, 0x64, 0x53, 0x74, 0x61, 0x74, 0x12,
	0x0f, 0x0a, 0x0b, 0x63, 0x70, 0x75, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x63, 0x61, 0x70, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x6b, 0x63, 0x61, 0x70, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x6b, 0x62, 0x61, 0x6e,
	0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x6e, 0x65, 0x74,
	0x62, 0x61, 0x6e, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x10, 0x04, 0x2a, 0x51, 0x0a, 0x0e,
	0x53, 0x74, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x74, 0x61, 0x74, 0x12, 0x0f,
	0x0a, 0x0b, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x10, 0x00, 0x12,
	0x16, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x70, 0x61, 0x75, 0x73, 0x65, 0x64, 0x10, 0x02, 0x42,
	0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x75,
	0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75, 0x73, 0x64,
	0x62, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescOnce sync.Once
	file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescData = file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDesc
)

func file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescGZIP() []byte {
	file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescOnce.Do(func() {
		file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescData = protoimpl.X.CompressGZIP(file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescData)
	})
	return file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDescData
}

var file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_teams_reco_arch_colossusdb_proto_statistics_proto_goTypes = []interface{}{
	(EmbdServerStat)(0),   // 0: colossusdb.EmbdServerStat
	(EmbdReplicaStat)(0),  // 1: colossusdb.EmbdReplicaStat
	(RodisServerStat)(0),  // 2: colossusdb.RodisServerStat
	(RodisReplicaStat)(0), // 3: colossusdb.RodisReplicaStat
	(StdStat)(0),          // 4: colossusdb.StdStat
	(StdReplicaStat)(0),   // 5: colossusdb.StdReplicaStat
}
var file_teams_reco_arch_colossusdb_proto_statistics_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_teams_reco_arch_colossusdb_proto_statistics_proto_init() }
func file_teams_reco_arch_colossusdb_proto_statistics_proto_init() {
	if File_teams_reco_arch_colossusdb_proto_statistics_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_teams_reco_arch_colossusdb_proto_statistics_proto_goTypes,
		DependencyIndexes: file_teams_reco_arch_colossusdb_proto_statistics_proto_depIdxs,
		EnumInfos:         file_teams_reco_arch_colossusdb_proto_statistics_proto_enumTypes,
	}.Build()
	File_teams_reco_arch_colossusdb_proto_statistics_proto = out.File
	file_teams_reco_arch_colossusdb_proto_statistics_proto_rawDesc = nil
	file_teams_reco_arch_colossusdb_proto_statistics_proto_goTypes = nil
	file_teams_reco_arch_colossusdb_proto_statistics_proto_depIdxs = nil
}
