// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.0
// 	protoc        (unknown)
// source: teams/reco-arch/colossusdb/proto/tables_manager.proto

package pb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TablesManagerError_Code int32

const (
	TablesManagerError_kOk        TablesManagerError_Code = 0
	TablesManagerError_kNotLeader TablesManagerError_Code = 1
)

// Enum value maps for TablesManagerError_Code.
var (
	TablesManagerError_Code_name = map[int32]string{
		0: "kOk",
		1: "kNotLeader",
	}
	TablesManagerError_Code_value = map[string]int32{
		"kOk":        0,
		"kNotLeader": 1,
	}
)

func (x TablesManagerError_Code) Enum() *TablesManagerError_Code {
	p := new(TablesManagerError_Code)
	*p = x
	return p
}

func (x TablesManagerError_Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TablesManagerError_Code) Descriptor() protoreflect.EnumDescriptor {
	return file_teams_reco_arch_colossusdb_proto_tables_manager_proto_enumTypes[0].Descriptor()
}

func (TablesManagerError_Code) Type() protoreflect.EnumType {
	return &file_teams_reco_arch_colossusdb_proto_tables_manager_proto_enumTypes[0]
}

func (x TablesManagerError_Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TablesManagerError_Code.Descriptor instead.
func (TablesManagerError_Code) EnumDescriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescGZIP(), []int{0, 0}
}

type TablesManagerError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TablesManagerError) Reset() {
	*x = TablesManagerError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TablesManagerError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TablesManagerError) ProtoMessage() {}

func (x *TablesManagerError) ProtoReflect() protoreflect.Message {
	mi := &file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TablesManagerError.ProtoReflect.Descriptor instead.
func (*TablesManagerError) Descriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescGZIP(), []int{0}
}

type GetNextIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetNextIdRequest) Reset() {
	*x = GetNextIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextIdRequest) ProtoMessage() {}

func (x *GetNextIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextIdRequest.ProtoReflect.Descriptor instead.
func (*GetNextIdRequest) Descriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescGZIP(), []int{1}
}

type GetNextIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *ErrorStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status"`
	Id     int32        `protobuf:"varint,2,opt,name=id,proto3" json:"id"`
}

func (x *GetNextIdResponse) Reset() {
	*x = GetNextIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextIdResponse) ProtoMessage() {}

func (x *GetNextIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextIdResponse.ProtoReflect.Descriptor instead.
func (*GetNextIdResponse) Descriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescGZIP(), []int{2}
}

func (x *GetNextIdResponse) GetStatus() *ErrorStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *GetNextIdResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type AllocateIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AllocateIdRequest) Reset() {
	*x = AllocateIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateIdRequest) ProtoMessage() {}

func (x *AllocateIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateIdRequest.ProtoReflect.Descriptor instead.
func (*AllocateIdRequest) Descriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescGZIP(), []int{3}
}

type AllocateIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *ErrorStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status"`
	Id     int32        `protobuf:"varint,2,opt,name=id,proto3" json:"id"`
}

func (x *AllocateIdResponse) Reset() {
	*x = AllocateIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateIdResponse) ProtoMessage() {}

func (x *AllocateIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateIdResponse.ProtoReflect.Descriptor instead.
func (*AllocateIdResponse) Descriptor() ([]byte, []int) {
	return file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescGZIP(), []int{4}
}

func (x *AllocateIdResponse) GetStatus() *ErrorStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *AllocateIdResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_teams_reco_arch_colossusdb_proto_tables_manager_proto protoreflect.FileDescriptor

var file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDesc = []byte{
	0x0a, 0x35, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x2d, 0x61, 0x72, 0x63,
	0x68, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75, 0x73, 0x64, 0x62, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75,
	0x73, 0x64, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x2d, 0x61, 0x72,
	0x63, 0x68, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75, 0x73, 0x64, 0x62, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x35, 0x0a, 0x12, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x1f, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x07,
	0x0a, 0x03, 0x6b, 0x4f, 0x6b, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x4e, 0x6f, 0x74, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x10, 0x01, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x78, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75, 0x73, 0x64, 0x62, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x55, 0x0a, 0x12, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63,
	0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75, 0x73, 0x64, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x32, 0xd8, 0x01,
	0x0a, 0x0d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x61, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x63,
	0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75, 0x73, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78,
	0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x6c,
	0x6f, 0x73, 0x73, 0x75, 0x73, 0x64, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x69, 0x64, 0x12, 0x64, 0x0a, 0x0a, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x1d, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75, 0x73, 0x64, 0x62, 0x2e, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1e, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75, 0x73, 0x64, 0x62, 0x2e, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x2f,
	0x63, 0x6f, 0x6c, 0x6f, 0x73, 0x73, 0x75, 0x73, 0x64, 0x62, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescOnce sync.Once
	file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescData = file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDesc
)

func file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescGZIP() []byte {
	file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescOnce.Do(func() {
		file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescData)
	})
	return file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDescData
}

var file_teams_reco_arch_colossusdb_proto_tables_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_teams_reco_arch_colossusdb_proto_tables_manager_proto_goTypes = []interface{}{
	(TablesManagerError_Code)(0), // 0: colossusdb.TablesManagerError.Code
	(*TablesManagerError)(nil),   // 1: colossusdb.TablesManagerError
	(*GetNextIdRequest)(nil),     // 2: colossusdb.GetNextIdRequest
	(*GetNextIdResponse)(nil),    // 3: colossusdb.GetNextIdResponse
	(*AllocateIdRequest)(nil),    // 4: colossusdb.AllocateIdRequest
	(*AllocateIdResponse)(nil),   // 5: colossusdb.AllocateIdResponse
	(*ErrorStatus)(nil),          // 6: colossusdb.ErrorStatus
}
var file_teams_reco_arch_colossusdb_proto_tables_manager_proto_depIdxs = []int32{
	6, // 0: colossusdb.GetNextIdResponse.status:type_name -> colossusdb.ErrorStatus
	6, // 1: colossusdb.AllocateIdResponse.status:type_name -> colossusdb.ErrorStatus
	2, // 2: colossusdb.TablesManager.GetNextId:input_type -> colossusdb.GetNextIdRequest
	4, // 3: colossusdb.TablesManager.AllocateId:input_type -> colossusdb.AllocateIdRequest
	3, // 4: colossusdb.TablesManager.GetNextId:output_type -> colossusdb.GetNextIdResponse
	5, // 5: colossusdb.TablesManager.AllocateId:output_type -> colossusdb.AllocateIdResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_teams_reco_arch_colossusdb_proto_tables_manager_proto_init() }
func file_teams_reco_arch_colossusdb_proto_tables_manager_proto_init() {
	if File_teams_reco_arch_colossusdb_proto_tables_manager_proto != nil {
		return
	}
	file_teams_reco_arch_colossusdb_proto_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TablesManagerError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teams_reco_arch_colossusdb_proto_tables_manager_proto_goTypes,
		DependencyIndexes: file_teams_reco_arch_colossusdb_proto_tables_manager_proto_depIdxs,
		EnumInfos:         file_teams_reco_arch_colossusdb_proto_tables_manager_proto_enumTypes,
		MessageInfos:      file_teams_reco_arch_colossusdb_proto_tables_manager_proto_msgTypes,
	}.Build()
	File_teams_reco_arch_colossusdb_proto_tables_manager_proto = out.File
	file_teams_reco_arch_colossusdb_proto_tables_manager_proto_rawDesc = nil
	file_teams_reco_arch_colossusdb_proto_tables_manager_proto_goTypes = nil
	file_teams_reco_arch_colossusdb_proto_tables_manager_proto_depIdxs = nil
}
