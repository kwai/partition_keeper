# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: teams/reco-arch/colossusdb/proto/tables_manager.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from teams.reco_arch.colossusdb.proto import common_pb2 as teams_dot_reco__arch_dot_colossusdb_dot_proto_dot_common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='teams/reco-arch/colossusdb/proto/tables_manager.proto',
  package='colossusdb',
  syntax='proto3',
  serialized_pb=_b('\n5teams/reco-arch/colossusdb/proto/tables_manager.proto\x12\ncolossusdb\x1a\x1cgoogle/api/annotations.proto\x1a-teams/reco-arch/colossusdb/proto/common.proto\"5\n\x12TablesManagerError\"\x1f\n\x04\x43ode\x12\x07\n\x03kOk\x10\x00\x12\x0e\n\nkNotLeader\x10\x01\"\x12\n\x10GetNextIdRequest\"H\n\x11GetNextIdResponse\x12\'\n\x06status\x18\x01 \x01(\x0b\x32\x17.colossusdb.ErrorStatus\x12\n\n\x02id\x18\x02 \x01(\x05\"\x13\n\x11\x41llocateIdRequest\"I\n\x12\x41llocateIdResponse\x12\'\n\x06status\x18\x01 \x01(\x0b\x32\x17.colossusdb.ErrorStatus\x12\n\n\x02id\x18\x02 \x01(\x05\x32\xd8\x01\n\rTablesManager\x12\x61\n\tGetNextId\x12\x1c.colossusdb.GetNextIdRequest\x1a\x1d.colossusdb.GetNextIdResponse\"\x17\x82\xd3\xe4\x93\x02\x11\x12\x0f/v1/get_next_id\x12\x64\n\nAllocateId\x12\x1d.colossusdb.AllocateIdRequest\x1a\x1e.colossusdb.AllocateIdResponse\"\x17\x82\xd3\xe4\x93\x02\x11\"\x0f/v1/allocate_idB&Z$github.com/kuaishou/colossusdb/pb;pbb\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,teams_dot_reco__arch_dot_colossusdb_dot_proto_dot_common__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_TABLESMANAGERERROR_CODE = _descriptor.EnumDescriptor(
  name='Code',
  full_name='colossusdb.TablesManagerError.Code',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='kOk', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kNotLeader', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=168,
  serialized_end=199,
)
_sym_db.RegisterEnumDescriptor(_TABLESMANAGERERROR_CODE)


_TABLESMANAGERERROR = _descriptor.Descriptor(
  name='TablesManagerError',
  full_name='colossusdb.TablesManagerError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TABLESMANAGERERROR_CODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=146,
  serialized_end=199,
)


_GETNEXTIDREQUEST = _descriptor.Descriptor(
  name='GetNextIdRequest',
  full_name='colossusdb.GetNextIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=201,
  serialized_end=219,
)


_GETNEXTIDRESPONSE = _descriptor.Descriptor(
  name='GetNextIdResponse',
  full_name='colossusdb.GetNextIdResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='colossusdb.GetNextIdResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='colossusdb.GetNextIdResponse.id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=221,
  serialized_end=293,
)


_ALLOCATEIDREQUEST = _descriptor.Descriptor(
  name='AllocateIdRequest',
  full_name='colossusdb.AllocateIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=295,
  serialized_end=314,
)


_ALLOCATEIDRESPONSE = _descriptor.Descriptor(
  name='AllocateIdResponse',
  full_name='colossusdb.AllocateIdResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='colossusdb.AllocateIdResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='id', full_name='colossusdb.AllocateIdResponse.id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=316,
  serialized_end=389,
)

_TABLESMANAGERERROR_CODE.containing_type = _TABLESMANAGERERROR
_GETNEXTIDRESPONSE.fields_by_name['status'].message_type = teams_dot_reco__arch_dot_colossusdb_dot_proto_dot_common__pb2._ERRORSTATUS
_ALLOCATEIDRESPONSE.fields_by_name['status'].message_type = teams_dot_reco__arch_dot_colossusdb_dot_proto_dot_common__pb2._ERRORSTATUS
DESCRIPTOR.message_types_by_name['TablesManagerError'] = _TABLESMANAGERERROR
DESCRIPTOR.message_types_by_name['GetNextIdRequest'] = _GETNEXTIDREQUEST
DESCRIPTOR.message_types_by_name['GetNextIdResponse'] = _GETNEXTIDRESPONSE
DESCRIPTOR.message_types_by_name['AllocateIdRequest'] = _ALLOCATEIDREQUEST
DESCRIPTOR.message_types_by_name['AllocateIdResponse'] = _ALLOCATEIDRESPONSE

TablesManagerError = _reflection.GeneratedProtocolMessageType('TablesManagerError', (_message.Message,), dict(
  DESCRIPTOR = _TABLESMANAGERERROR,
  __module__ = 'teams.reco_arch.colossusdb.proto.tables_manager_pb2'
  # @@protoc_insertion_point(class_scope:colossusdb.TablesManagerError)
  ))
_sym_db.RegisterMessage(TablesManagerError)

GetNextIdRequest = _reflection.GeneratedProtocolMessageType('GetNextIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETNEXTIDREQUEST,
  __module__ = 'teams.reco_arch.colossusdb.proto.tables_manager_pb2'
  # @@protoc_insertion_point(class_scope:colossusdb.GetNextIdRequest)
  ))
_sym_db.RegisterMessage(GetNextIdRequest)

GetNextIdResponse = _reflection.GeneratedProtocolMessageType('GetNextIdResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETNEXTIDRESPONSE,
  __module__ = 'teams.reco_arch.colossusdb.proto.tables_manager_pb2'
  # @@protoc_insertion_point(class_scope:colossusdb.GetNextIdResponse)
  ))
_sym_db.RegisterMessage(GetNextIdResponse)

AllocateIdRequest = _reflection.GeneratedProtocolMessageType('AllocateIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _ALLOCATEIDREQUEST,
  __module__ = 'teams.reco_arch.colossusdb.proto.tables_manager_pb2'
  # @@protoc_insertion_point(class_scope:colossusdb.AllocateIdRequest)
  ))
_sym_db.RegisterMessage(AllocateIdRequest)

AllocateIdResponse = _reflection.GeneratedProtocolMessageType('AllocateIdResponse', (_message.Message,), dict(
  DESCRIPTOR = _ALLOCATEIDRESPONSE,
  __module__ = 'teams.reco_arch.colossusdb.proto.tables_manager_pb2'
  # @@protoc_insertion_point(class_scope:colossusdb.AllocateIdResponse)
  ))
_sym_db.RegisterMessage(AllocateIdResponse)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z$github.com/kuaishou/colossusdb/pb;pb'))
# @@protoc_insertion_point(module_scope)
