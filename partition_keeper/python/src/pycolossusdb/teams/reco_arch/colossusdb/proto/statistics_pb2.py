# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: teams/reco-arch/colossusdb/proto/statistics.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='teams/reco-arch/colossusdb/proto/statistics.proto',
  package='colossusdb',
  syntax='proto3',
  serialized_pb=_b('\n1teams/reco-arch/colossusdb/proto/statistics.proto\x12\ncolossusdb*2\n\x0e\x45mbdServerStat\x12 \n\x1cinstance_storage_limit_bytes\x10\x00*-\n\x0f\x45mbdReplicaStat\x12\x1a\n\x16\x64\x62_storage_limit_bytes\x10\x00*3\n\x0fRodisServerStat\x12\x0f\n\x0b\x64\x62\x63\x61p_bytes\x10\x00\x12\x0f\n\x0b\x64\x62\x63pu_cores\x10\x01*\x1b\n\x10RodisReplicaStat\x12\x07\n\x03seq\x10\x00*f\n\x07StdStat\x12\x0f\n\x0b\x63pu_percent\x10\x00\x12\x10\n\x0cmemcap_bytes\x10\x01\x12\x11\n\rdiskcap_bytes\x10\x02\x12\x12\n\x0e\x64iskband_bytes\x10\x03\x12\x11\n\rnetband_bytes\x10\x04*Q\n\x0eStdReplicaStat\x12\x0f\n\x0bunavailable\x10\x00\x12\x16\n\x12stream_load_offset\x10\x01\x12\x16\n\x12stream_load_paused\x10\x02\x42&Z$github.com/kuaishou/colossusdb/pb;pbb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_EMBDSERVERSTAT = _descriptor.EnumDescriptor(
  name='EmbdServerStat',
  full_name='colossusdb.EmbdServerStat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='instance_storage_limit_bytes', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=65,
  serialized_end=115,
)
_sym_db.RegisterEnumDescriptor(_EMBDSERVERSTAT)

EmbdServerStat = enum_type_wrapper.EnumTypeWrapper(_EMBDSERVERSTAT)
_EMBDREPLICASTAT = _descriptor.EnumDescriptor(
  name='EmbdReplicaStat',
  full_name='colossusdb.EmbdReplicaStat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='db_storage_limit_bytes', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=117,
  serialized_end=162,
)
_sym_db.RegisterEnumDescriptor(_EMBDREPLICASTAT)

EmbdReplicaStat = enum_type_wrapper.EnumTypeWrapper(_EMBDREPLICASTAT)
_RODISSERVERSTAT = _descriptor.EnumDescriptor(
  name='RodisServerStat',
  full_name='colossusdb.RodisServerStat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='dbcap_bytes', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='dbcpu_cores', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=164,
  serialized_end=215,
)
_sym_db.RegisterEnumDescriptor(_RODISSERVERSTAT)

RodisServerStat = enum_type_wrapper.EnumTypeWrapper(_RODISSERVERSTAT)
_RODISREPLICASTAT = _descriptor.EnumDescriptor(
  name='RodisReplicaStat',
  full_name='colossusdb.RodisReplicaStat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='seq', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=217,
  serialized_end=244,
)
_sym_db.RegisterEnumDescriptor(_RODISREPLICASTAT)

RodisReplicaStat = enum_type_wrapper.EnumTypeWrapper(_RODISREPLICASTAT)
_STDSTAT = _descriptor.EnumDescriptor(
  name='StdStat',
  full_name='colossusdb.StdStat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='cpu_percent', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='memcap_bytes', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='diskcap_bytes', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='diskband_bytes', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='netband_bytes', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=246,
  serialized_end=348,
)
_sym_db.RegisterEnumDescriptor(_STDSTAT)

StdStat = enum_type_wrapper.EnumTypeWrapper(_STDSTAT)
_STDREPLICASTAT = _descriptor.EnumDescriptor(
  name='StdReplicaStat',
  full_name='colossusdb.StdReplicaStat',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='unavailable', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='stream_load_offset', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='stream_load_paused', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=350,
  serialized_end=431,
)
_sym_db.RegisterEnumDescriptor(_STDREPLICASTAT)

StdReplicaStat = enum_type_wrapper.EnumTypeWrapper(_STDREPLICASTAT)
instance_storage_limit_bytes = 0
db_storage_limit_bytes = 0
dbcap_bytes = 0
dbcpu_cores = 1
seq = 0
cpu_percent = 0
memcap_bytes = 1
diskcap_bytes = 2
diskband_bytes = 3
netband_bytes = 4
unavailable = 0
stream_load_offset = 1
stream_load_paused = 2


DESCRIPTOR.enum_types_by_name['EmbdServerStat'] = _EMBDSERVERSTAT
DESCRIPTOR.enum_types_by_name['EmbdReplicaStat'] = _EMBDREPLICASTAT
DESCRIPTOR.enum_types_by_name['RodisServerStat'] = _RODISSERVERSTAT
DESCRIPTOR.enum_types_by_name['RodisReplicaStat'] = _RODISREPLICASTAT
DESCRIPTOR.enum_types_by_name['StdStat'] = _STDSTAT
DESCRIPTOR.enum_types_by_name['StdReplicaStat'] = _STDREPLICASTAT


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('Z$github.com/kuaishou/colossusdb/pb;pb'))
# @@protoc_insertion_point(module_scope)
